// IDEA BEHIND MY STYLING
// Every element gets 100% with, this is my solution to make custom components' width equal to 100%
// in every created component the parent div has "full-width-flex-container" which again has with of 100%
// and now every component is wrapped in <component-name>-container where i can set the with to whatever percantage i want
// it also allows to set min and max width to that container which in my opinion creates neat environment for responsive design
// But it also has downsides i am not sure if it will be so comfortable to style nested custom components, but this is my first
// bigger app so i might change this approach later, at this point of development i am going to use this comment as guide

// NAME CONVENTION
// open boolean variable => <name>Opened

// Z-INDEX
// maks z-index => 100 -> main navigation


@import './variables';


* {
  font-family: Arial, Helvetica, sans-serif;
  font-weight: 500;
  width: 100%;
  box-sizing: border-box;
  margin: 0;
  padding: 0;

}

.full-width-flex-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}


.toast-container.toast-bottom-right {
  bottom: 1rem;
  right: -2rem;
}

.toast-container.toast-bottom-right .toast-success{
  background-color: $secondary-color;
}

// default classes

// list element
.list-el-default {
  font-size: 1.15rem;

  display: flex;
  flex-direction: row;
  justify-content: space-between;
  flex-wrap: wrap;

  border: none;
  border-radius: 5px;
  padding: 0.5rem 0.2rem;
  background-color: $accent-color;
  color: $default-text-color;
  box-shadow: 0px 0px 5px 0px $accent-text-color;
  border: 1px solid $accent-text-color;

  margin-bottom: 0.25rem;
}

// button
.btn-text {
  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
  font-weight: bolder;
}

.btn-default {
  cursor: pointer;

  padding: 0.25rem 0.5rem;

  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
  font-weight: bolder;
  color: $dominant-color;
  background-color: $accent-cta-color;
  box-shadow: 0px 0px 5px 0px $accent-cta-color;
  border: none;
  border-radius: 5px;

  transition: opacity 500ms ease-in-out 0ms;
}

.btn-default.disabled {
  pointer-events: none;
  opacity: 0.5;
}

.btn-default:focus {
  outline: 2px solid $accent-dark-color;
  box-shadow: 0px 0px 10px 1px $accent-cta-color;
}

.btn-default.activated {
  animation-name: btn-change;
  animation-duration: 400ms;
  animation-timing-function: ease;
}

@media screen and (min-width: 420px) {
  .btn-default:hover {
    box-shadow: 0px 0px 10px 1px $accent-cta-color;
    outline: 2px solid $accent-dark-color;
  }
}

@media screen and (max-width: 420px) {
  .btn-default {
    font-size: 1.25rem;

    padding: 1rem 0.25rem;
    color: white;
    background-color: $accent-cta-color;

    -webkit-appearance: none;
    box-shadow: 0px 0px 5px 0px $accent-cta-color;
    -webkit-box-shadow: 0px 0px 5px 0px $accent-text-color;

    border: none;
    outline: none;
    border-radius: 5px;
  }

}


// input
.ipt-default {
  background-color: $accent-color;
  border: none;
  -webkit-appearance: none;
  -webkit-box-shadow: 0px 0px 3px 0px $accent-text-color;
  box-shadow: 0px 0px 3px 0px $accent-text-color;


  font-size: 1.2rem;
  border-radius: 5px;
  padding: 0.4rem 0.3rem;

  transition: box-shadow 100ms ease-in-out 0ms;
}

.ipt-default.highlight,
.ipt-default:focus,
.ipt-default:active {
  border: none;
  outline: none;
  -webkit-appearance: none;
  -webkit-box-shadow: 0px 0px 1.5px 1.5px $accent-cta-color;
  box-shadow: 0px 0px 1.5px 1.5px $accent-cta-color;
}


// progress bar
.progress-container {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.progress-description {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.progress-description p {
  width: fit-content;

  color: $accent-cta-color;
  font-size: 0.75rem;
  font-weight: bolder;
  font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
}

.progress-bar-container {
  height: 1rem;
  background-color: $accent-color;
  border-radius: 5px;

  overflow: hidden;

  -webkit-appearance: none;
  box-shadow:  0px 0px 2px 0px $accent-dark-color;;
  -webkit-box-shadow:  0px 0px 2px 0px $accent-dark-color;
}

.progress-bar {
  height: 100%;
  width: 0;

  background-color: $accent-cta-color;

  transition: width 800ms ease-in-out 100ms;
}

.progress-bar-25 {
  width: 25%
}

.progress-bar-50 {
  width: 50%
}

.progress-bar-75 {
  width: 75%
}

.progress-bar-100 {
  width: 100%
}


// label
.lbl-default {
  color: $accent-text-color
}

// spinner
.lds-ellipsis {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
}
.lds-ellipsis div {
  position: absolute;
  top: 33px;
  width: 13px;
  height: 13px;
  border-radius: 50%;
  background: $accent-cta-color;
  animation-timing-function: cubic-bezier(0, 1, 1, 0);
}
.lds-ellipsis div:nth-child(1) {
  left: 8px;
  animation: lds-ellipsis1 0.6s infinite;
}
.lds-ellipsis div:nth-child(2) {
  left: 8px;
  animation: lds-ellipsis2 0.6s infinite;
}
.lds-ellipsis div:nth-child(3) {
  left: 32px;
  animation: lds-ellipsis2 0.6s infinite;
}
.lds-ellipsis div:nth-child(4) {
  left: 56px;
  animation: lds-ellipsis3 0.6s infinite;
}
@keyframes lds-ellipsis1 {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
  }
}
@keyframes lds-ellipsis3 {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}
@keyframes lds-ellipsis2 {
  0% {
    transform: translate(0, 0);
  }
  100% {
    transform: translate(24px, 0);
  }
}


// animations

@keyframes btn-change {
  0%   {transform: scale(1);}
  20%   {transform: scale(1.05);}
  60%   {transform: scale(0.9);}
  100% {transform: scale(1);}
}

@keyframes btn-activate {
  0%   {transform: scale(1); opacity:0.5;}
  20%   {transform: scale(1.05); opacity:0.7;}
  60%   {transform: scale(0.9); opacity:0.9;}
  100% {transform: scale(1); opacity:1;}
}
